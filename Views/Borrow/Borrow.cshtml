@model BibliotecaApp.Models.BorrowingModel
@using BibliotecaApp.resources

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        $(document).ready(function () {
            // Eveniment pentru trimiterea formularului prin AJAX
            $('#borrowBookForm').submit(function (e) {
                e.preventDefault();  // Previne comportamentul implicit al formularului
                debugger;
                var formData = $(this).serialize();  // Obține datele din formular
                console.log(formData);
                // Trimite cererea AJAX la controller-ul Borrow
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("Borrow", "Borrow")',  // Metoda și controller-ul care vor procesa cererea
                    data: formData,  // Datele trimise din formular
                    success: function (response) {
                        console.log("Împrumutul a fost realizat cu succes");
                        $('#message').html('<div class="alert alert-success">Împrumutul a fost realizat cu succes.</div>');
                        $('#borrowBookModal').modal('hide');  // Închide modalul

                        $(".borrowBookBtn").prop("disabled", true);
                    },
                    error: function (xhr, status, error) {
                        console.log("Eroare la împrumut");
                        $('#message').html('<div class="alert alert-danger">A apărut o eroare. Încercați din nou.</div>');
                    }
                });
            });
        });
    </script>
}

<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">

<!-- Modalul pentru împrumutul unei cărți -->
<div class="modal fade" id="borrowBookModal" tabindex="-1" aria-labelledby="borrowBookModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="borrowBookModalLabel">@Resource.BorrowBook</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                @using (Html.BeginForm("Borrow", "Borrow", FormMethod.Post, new { id = "borrowBookForm", @class = "borrowBookForm" }))
                {
                    @Html.AntiForgeryToken()

                    <!-- Hidden field for Book ID -->
                    @Html.HiddenFor(model => model.Book.BookId)
                    <div class="row">
                        <div class="col-md-6">
                            <div class="mb-3">
                                @Html.LabelFor(model => model.User.FirstName, @Resource.FirstName)
                                <!-- Editor pentru numele utilizatorului, dar cu readonly -->
                                <input type="text" class="form-control" value="@Model.User.FirstName" readonly />
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-3">
                                @Html.LabelFor(model => model.User.LastName, @Resource.LastName)
                                <!-- Editor pentru numele de familie al utilizatorului, dar cu readonly -->
                                <input type="text" class="form-control" value="@Model.User.LastName" readonly />
                            </div>
                        </div>
                    </div>
                    <!-- Numele utilizatorului se completează automat din model -->

                    <div class="row">
                        <div class="col-md-6">
                            <div class="mb-3">
                                @Html.LabelFor(model => model.BorrowDate, @Resource.BorrowDate)
                                @Html.EditorFor(model => model.BorrowDate, new { htmlAttributes = new { @class = "form-control", placeholder = @Resource.BorrowDate, @readonly = true } })
                                @Html.ValidationMessageFor(model => model.BorrowDate)
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-3">
                                @Html.LabelFor(model => model.ReturnDate, @Resource.ReturnDate)
                                @Html.EditorFor(model => model.ReturnDate, new { htmlAttributes = new { @class = "form-control", placeholder = @Resource.ReturnDate } })
                                @Html.ValidationMessageFor(model => model.ReturnDate)
                            </div>
                        </div>
                    </div>

                    <!-- Adăugăm datele cărții -->
                    <div class="mb-3">
                        @Html.LabelFor(model => model.Book.Title, @Resource.BookTitle)
                        <input type="text" class="form-control" value="@Model.Book.Title" readonly />
                    </div>

                    <div class=" row">
                        <div class="col-md-6">
                            <div class="mb-3">
                                @Html.LabelFor(model => model.Book.AuthorName, @Resource.Author)
                                @Html.DropDownListFor(model => model.Book.AuthorId, new SelectList(ViewBag.Authors as List<SelectListItem>, "Value", "Text"), @Resource.SelectAuthor, new { @class = "form-control", @readonly = true })
                                @Html.ValidationMessageFor(model => model.Book.AuthorName)
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-3">
                                @Html.LabelFor(model => model.Book.CategoryName, @Resource.Category)
                                @Html.DropDownListFor(model => model.Book.CategoryId, new SelectList(ViewBag.Categories as List<SelectListItem>, "Value", "Text"), @Resource.SelectCategory, new { @class = "form-control", @readonly = true })
                                @Html.ValidationMessageFor(model => model.Book.CategoryId)
                            </div>
                        </div>
                    </div>

                    <div class="mb-3">
                        @Html.LabelFor(model => model.Book.AvailableCopies, @Resource.AvailableCopies)
                        <input type="text" class="form-control" value="@Model.Book.AvailableCopies" readonly />
                    </div>

                    <button type="submit" class="btn btn-success">@Resource.Borrow</button>
                    <div id="message" class="mt-3"></div>
                }
            </div>
        </div>
    </div>
</div>
