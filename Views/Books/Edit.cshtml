@model BibliotecaApp.Models.BookModel
@using BibliotecaApp.resources

@section scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

    <script>
        $(document).ready(function () {
            // Apelăm funcția pentru a gestiona trimiterea formularului de editare a cărții
            handleEditBookFormSubmission();
        });

        // Functia pentru trimiterea formularului de editare a cărții prin AJAX
        function handleEditBookFormSubmission() {
            $('#editBookForm').submit(function (e) {
                e.preventDefault(); // Previne trimiterea standard a formularului

                var form = $(this);

                // Afișează mesajul de eroare sau succes dacă există
                //$('#message').hide();  // Ascunde mesajele de eroare anterioare

                $.ajax({
                    url: 'Books/Edit',
                    type: 'POST',
                    data: form.serialize(), // Serializează datele formularului
                    success: function (response) {
                        $('#editBookModal').modal('hide');
                        // Afișăm un mesaj de succes
                       // $('#message').html('<div class="alert alert-success">' + response.message + '</div>');
                        location.reload();
                    },
                    error: function (response) {
                        // Afișează mesajul de eroare
                        //$('#message').html('<div class="alert alert-danger">' + response.message + '</div>').show();
                        console.log("error")
                    }
                });
            });
        }
    </script>
}
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
<!-- Modalul pentru editarea unei cărți -->

<div class="modal fade" id="editBookModal" tabindex="-1" aria-labelledby="editBookModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editBookModalLabel">@Resource.EditBook</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                @using (Html.BeginForm("Edit", "Books", FormMethod.Post, new { id = "editBookForm", @class = "editBookForm" }))
                {
                    @Html.AntiForgeryToken()
                    <div class="row">
                        <div class="col-md-6">
                            <div class="mb-3">
                                @Html.LabelFor(model => model.Title, @Resource.BookTitle)
                                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control", placeholder = @Resource.BookTitle } })
                                @Html.ValidationMessageFor(model => model.Title)
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-3">
                                @Html.LabelFor(model => model.Description, @Resource.Description)
                                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control", placeholder = @Resource.Description } })
                                @Html.ValidationMessageFor(model => model.Description)
                            </div>
                        </div>
                    </div>
                    <div class=" row">
                        <div class="col-md-6">
                            <div class="mb-3">
                                @Html.LabelFor(model => model.AuthorId, @Resource.Author)
                                @Html.DropDownListFor(model => model.AuthorId, new SelectList(ViewBag.Authors as List<SelectListItem>, "Value", "Text"), @Resource.SelectAuthor, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.AuthorId)
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-3">
                                @Html.LabelFor(model => model.CategoryId, @Resource.Category)
                                @Html.DropDownListFor(model => model.CategoryId, new SelectList(ViewBag.Categories as List<SelectListItem>, "Value", "Text"), @Resource.SelectCategory, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.CategoryId)
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="mb-3">
                                @Html.LabelFor(model => model.AvailableCopies, @Resource.AvailableCopies)
                                @Html.EditorFor(model => model.AvailableCopies, new { htmlAttributes = new { @class = "form-control", placeholder = @Resource.AvailableCopies } })
                                @Html.ValidationMessageFor(model => model.AvailableCopies)
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-3">
                                @Html.LabelFor(model => model.CoverImage, @Resource.CoverImage)
                                @Html.EditorFor(model => model.CoverImage, new { htmlAttributes = new { @class = "form-control", placeholder = @Resource.CoverImage } })
                                @Html.ValidationMessageFor(model => model.CoverImage)
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="mb-3">
                                @Html.LabelFor(model => model.IsPopular, @Resource.IsPopular)
                                <div class="form-check form-switch">
                                    @Html.CheckBoxFor(model => model.IsPopular, new { @class = "form-check-input" })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-3">
                                @Html.LabelFor(model => model.IsRecommended, @Resource.IsRecommended)
                                <div class="form-check form-switch">
                                    @Html.CheckBoxFor(model => model.IsRecommended, new { @class = "form-check-input" })
                                </div>
                            </div>
                        </div>
                    </div>

                    <button type="submit" class="btn btn-success">@Resource.EditBook</button>
                    <div id="message" class="mt-3"></div>
                }
            </div>
        </div>
    </div>
</div>
