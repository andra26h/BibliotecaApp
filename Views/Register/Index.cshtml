@using BibliotecaApp.resources
@model BibliotecaApp.Models.UserModel
@using System.Linq

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

    <script>
        $(document).ready(function () {
            Register();
        });

        function Register() {
            $('#RegisterForm').on('submit', function (e) {
                e.preventDefault(); // Previne reîncărcarea paginii
                var formData = {
                    Username: $('#Username').val(),
                    Email: $('#Email').val(),
                    Password: $('#Password').val(),
                    ConfirmPassword: $('#ConfirmPassword').val(),
                    FirstName: $('#FirstName').val(),
                    LastName: $('#LastName').val()
                };

                console.log(formData);

                $.ajax({
                    url: '@Url.Action("Register", "Register")', // Verifică să folosești ruta corectă pentru acțiunea de înregistrare
                    type: 'POST',
                    data: formData,
                    success: function (response) {
                        // Verifică dacă răspunsul este succes
                        if (response.success) {
                            // Afișează mesajul de succes
                            $('#message').html('<div class="alert alert-success">' + response.message + '</div>');
                            // Redirecționează utilizatorul
                            window.location.href = response.redirectUrl;
                        } else {
                            // Afișează mesajul de eroare
                            $('#message').html('<div class="alert alert-danger">' + response.message + '</div>');
                        }
                    },
                    error: function (xhr, status, error) {
                        // Afișează mesajul de eroare
                        $('#message').html('<div class="alert alert-danger">Eroare: ' + error + '</div>');
                    }
                });
            });
        }

    </script>
}

<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">

<style>
    /* Stil pentru fundalul întregii pagini */
    body {
        background-image: url('/images/bookwall.jpg');
        background-size: 100%;
        background-position: center;
        background-attachment: fixed;
        height: 100vh;
    }

    #register {
        background-color: rgba(255, 255, 255, 0.8); /* Fundal semitransparent pentru cardul de login */
        /* padding: 30px; */
        margin-top: 50px;
        border-radius: 8px;
    }
</style>

@using (Html.BeginForm("CreateUser", "Register", FormMethod.Post, new { @id = "RegisterForm" }))
{
    @Html.AntiForgeryToken()

    <!-- Container de fundal pentru imagine -->
    <div class="container-fluid d-flex justify-content-center align-items-center">

        <!-- Cardul pentru formular - Redus și compact -->
        <div class="card p-3 shadow-sm" id="register">
            <div class="card-body">
                <h2 class="text-center mb-4">@Resource.Register</h2>

                <div id="message"></div> <!-- Afișează mesaje de succes sau eroare -->
                <!-- Form row pentru FirstName și LastName -->
                <div class="row">
                    <div class="col-md-6">
                        <div class="mb-3">
                            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control", placeholder = Resource.FirstName } })
                            @Html.ValidationMessageFor(m => m.FirstName)
                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="mb-3">
                            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control", placeholder = Resource.LastName } })
                            @Html.ValidationMessageFor(m => m.LastName)
                        </div>
                    </div>
                </div>

                <!-- Form row pentru Username și Email (pe același rând) -->
                <div class="row">
                    <div class="col-md-6">
                        <div class="mb-3">
                            @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control", placeholder = Resource.Username } })
                            @Html.ValidationMessageFor(m => m.Username)
                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="mb-3">
                            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", placeholder = Resource.Email } })
                            @Html.ValidationMessageFor(m => m.Email)
                        </div>
                    </div>
                </div>

                <!-- Form row pentru Password și ConfirmPassword (pe același rând) -->
                <div class="row">
                    <div class="col-md-6">
                        <div class="mb-3">
                            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", placeholder = Resource.Password, type = "password" } })
                            @Html.ValidationMessageFor(m => m.Password)
                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="mb-3">
                            @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control", placeholder = Resource.ConfirmPassword, type = "password" } })
                            @Html.ValidationMessageFor(m => m.ConfirmPassword)
                        </div>
                    </div>
                </div>

                <!-- Butonul de register -->
                <button type="submit" class="btn btn-primary w-100 mt-3">@Resource.Register</button>
                <div id="message" class="mt-3"></div>
            </div>
        </div>
    </div>
}
